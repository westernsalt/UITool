#ifndef DEFINE_H_
#define DEFINE_H_

#define    RESOURCE_PATH	

#define		WM_CREATE_ASSET				WM_USER+1
#define		WM_ALLSEL_CHECKED			WM_USER+2
#define		WM_DRAGBOX_SELECT			WM_USER+3

#define		WM_DRAW_ALPHABLEND_DRAGBOX	WM_USER+4
#define		WM_DRAW_ASSETBASE			WM_USER+5
#define		WM_DRAW_BASICASSET			WM_USER+6

#define		WM_BASIC_ASSET_FOCUSED		WM_USER+7
#define		WM_ASSET_BASE_FOCUSED		WM_USER+8
#define		WM_UIFRAME_FOCUSED			WM_USER+9

#define		WM_SAVE_ASSET_MSG			WM_USER+10
#define		WM_SAVE_SCENE_MSG			WM_USER+11

#define		WM_ASSET_ATT_CHANGE			WM_USER+12

//	TextureWnd가 DlgBar와 사용하는 메세지
#define		WM_SELCHANGE_TEXTURELIST	WM_USER+13
#define		WM_RESET_PICWND_ELEMENT		WM_USER+14
#define		WM_UPDATE_DRAGBOX_INFO		WM_USER+15
#define		WM_CHANGE_DRAGBOX_INFO		WM_USER+16

#define		WM_PICTUREWND_DESTROY		WM_USER+17
#define		WM_PICTUREWND_CREATE		WM_USER+18

//	다이알로그의 정보 갱신을 위한 메세지
#define		WM_REFRESH_DLGBAR_INFO		WM_USER+19
#define		WM_CHANGE_ATTCOMBOBOX		WM_USER+20
#define		WM_CHANGE_RADIOBTN			WM_USER+21
#define		WM_CHANGE_GROUPBUTTON_INDEX	WM_USER+22
#define		WM_CLEAR_ALL				WM_USER+23

//	인풋텍스트 메세지 교환
#define		WM_REQUEST_STRING			WM_USER+24
#define		WM_SEND_REQUEST_STRING		WM_USER+25
#define		WM_INIT_STRING				WM_USER+26

//	해상도 변경 메세지
#define		WM_CHANGE_RESOLUTION		WM_USER+27

//씬에디터 - 에셋 리스트 더블 클릭 메세지
#define		WM_ASSETLIST_DOUBLE_CLICK	WM_USER+28
//씬에디터 - 프레임 리스트 더블 클릭 메세지
#define		WM_FRAMELIST_DOUBLE_CLICK	WM_USER+29
//씬에디터 - 씬 리스트 더블 클릭 메세지
#define		WM_SCENELIST_DOUBLE_CLICK	WM_USER+30
//씬에디터 - 클릭한 에셋 프리뷰
#define		WM_ASSET_PREVIEW			WM_USER+31
//씬에디터 - 클릭한 프레임 프리뷰
#define		WM_FRAME_PREVIEW			WM_USER+32
//씬에디터 - 클릭한 프레임 프리뷰
#define		WM_SCENE_ASSET_PREVIEW_DESTROY WM_USER+33

//에셋 에디터 - 에셋리스트 더블 클릭
#define		WM_ASSETEDITOR_ASSETLIST_DOUBLE_CLICK WM_USER+34
#define		WM_LISTITEM_ASSET_DELETE	WM_USER+35

//	타이머
#define		DRAW_ASSET_TIMER			1000
#define		DRAW_SCENE_TIMER			2000

//에세세 미리보기 타이머
#define		DRAW_ASSET_PREVIEW_TIMER	3000

#define		WND_HEIGHT					768
#define		WND_SMALL_HEIGHT			600
#define		WND_WIDTH					1024
#define		WND_SMALL_WIDTH				800

#define		MAX_BASIC_ASSET				50
#define		MAX_CUSTOM_ASSET			10
#define		MAX_ATT_SIZE				50
#define		INTERVAL					2
#define		ALPHA_AMOUNT				128
#define		ZEROBASE					0
#define		NOTHING_IN_HERE				-1

//	디폴트 경로 설정
#define		RESOURCE_DEFAULT_PATH		L"\\..\\DataSetup\\UI"	
#define		ASSET_FOLDER_PATH			L"\\..\\DataSetup\\UI\\Asset"
#define		SCENE_FOLDER_PATH			L"\\..\\DataSetup\\UI\\Scene"
#define		FRAME_FOLDER_PATH			L"\\..\\DataSetup\\UI\\Frame"
#define		TGA_FOLDER_PATH				L"\\..\\DataSetup\\UI\\Texture"
#define		TEXTURE_FOLDER_PATH			"TexturesSV\\ui\\newUI"
//	800*600 경로 설정
#define		SCENE_800x600_FOLDER_PATH	L"\\..\\DataSetup\\UI\\Scene800x600"
#define		FRAME_800x600_FOLDER_PATH	L"\\..\\DataSetup\\UI\\Frame800x600"

#define		DEFAULT_MULTILINE_TEXT1		L"Once when I was six years old I saw a magnificent picture in a book,"
#define		DEFAULT_MULTILINE_TEXT2		L"called True Stories from Nature, about the primeval forest."

#define		SCENE_EDIT_DLGBAR_X			175
#define		SCENE_SETTING_DLGBAR_Y		62

#define		ASSET_EDIT_DLGBAR_X			137
#define		ASSET_SETTING_DLGBAR_Y		17
#define		CUSTOM_MAX_PATH				450
#define		DEFAULT_FONT_SIZE			12

#define		DRAW_ID_HEIGHT				15
#define		DRAW_BOUNDARY_INDENT		10

#define		UIFRAME_INDEX_RGB			RGB(51,102,255)
#define		UIASSET_INDEX_RGB			RGB(153,102,255)

enum	eRefreshType
{
	REFRESH_ASSET,
	REFRESH_FRAME,
};

enum eWndSize
{
	WINDOW_START_X = 100,
	WINDOW_START_Y = 100,
	WINDOW_SIZE_X = 1300,
	WINDOW_SIZE_Y = 975,
	WINDOW_SMALL_SIZE_X = 1076,
	WINDOW_SMALL_SIZE_Y = 807,
};

enum eAssetTarget
{
	ASSET_EDITOR_TARGET,
	SCENE_EDITOR_TARGET,
	SCENE_EDITOR_FRAME_TARGET,
	EDITOR_TARGET_END,
};

enum eAxisType
{
	AXIS_X,
	AXIS_Y,
	AXIS_Z,
};

enum eMouseFlag
{
	MOUSE_INIT = -1,
	MOUSE_HOVER,
	MOUSE_LEAVE,
};

enum eRGB
{
	RGB_R = 0,
	RGB_G,
	RGB_B,
	RGB_A,
};

/*다이알로그 인덱스와 에셋타입의 순서는 같아야한다.*/
enum eAssetType
{
	ASSET_DEFAULT = -1,
	ASSET_PICTURE,
	ASSET_BUTTON,
	ASSET_TABBUTTON,
	ASSET_TEXTBOX,
	ASSET_INPUTTEXT,
	ASSET_LISTITEM,
	ASSET_LISTBOX,
	ASSET_COMBOBOX,
	ASSET_CHECKBOX,
	ASSET_RADIOBUTTON,
	ASSET_SCROLL,
	ASSET_PROGRESSBAR,
	ASSET_SLIDER,
	ASSET_IMAGEANIMATION,
	ASSET_THIRDGRID,
	ASSET_END,
};

enum eDlgBarIndex
{
	DLGBAR_PICTURE,
	DLGBAR_BUTTON,
	DLGBAR_TABBUTTON,
	DLGBAR_TEXTBOX,
	DLGBAR_INPUTTEXT,
	DLGBAR_LISTITEM,
	DLGBAR_LISTBOX,
	DLGBAR_COMBOBOX,
	DLGBAR_CHECKBOX,
	DLGBAR_RADIOBUTTON,
	DLGBAR_SCROLL,
	DLGBAR_PROGRESSBAR,
	DLGBAR_SLIDER,
	DLGBAR_IMAGEANIMATION,
	DLGBAR_THIRDGRID,
	DLGBAR_END,
};

enum eDragboxSet
{
	DRAGBOX_LEFT,
	DRAGBOX_TOP,
	DRAGBOX_WIDTH,
	DRAGBOX_HEIGHT,
	DRAGBOX_RECT,
};

enum eButtonSelect
{
	BTN_NORMAL,
	BTN_PRESSED,
	BTN_HIGHLIGHT,
	BTN_DISABLE,
	BTN_CHECKMARK,
	BTN_GAUGEBAR,
	BTN_BACKGROUND,
	BTN_EXTRAGAUGEBAR,
	BTN_OPEN_NORMAL,
	BTN_OPEN_PRESSED,
	BTN_OPEN_HIGHLIGHT,
	BTN_OPEN_DISABLE,
};

enum eAssetState
{
	STATE_NORMAL,
	STATE_PRESSED,
	STATE_HIGHLIGHT,
	STATE_DISABLE,
};


enum eRadioBtnDlgBarControl
{
	RADIOBTNDLGBAR_INDEX,
	RADIOBTNDLGBAR_RGB_R,
	RADIOBTNDLGBAR_RGB_G,
	RADIOBTNDLGBAR_RGB_B,
	RADIOBTNDLGBAR_TEXTBOX_INTERVAL,
	RADIOBTNDLGBAR_INDENT_X,
	RADIOBTNDLGBAR_INDENT_Y,
	RADIOBTNDLGBAR_ICON_PATH,
	RADIOBTNDLGBAR_ICON_POSITION,
	RADIOBTNDLGBAR_DEFAULT_SHOW,
	RADIOBTNDLGBAR_FONT_BOLD,
};

enum eImageAnimationControl
{
	IMAGEANIMATIONDLGBAR_TEXTUREPATH,
	IMAGEANIMATIONDLGBAR_TEXTURE_WIDTH_SIZE,
	IMAGEANIMATIONDLGBAR_TEXTURE_HEIGHT_SIZE,
	IMAGEANIMATIONDLGBAR_IMAGE_START_POS_X,
	IMAGEANIMATIONDLGBAR_IMAGE_START_POS_Y,
	IMAGEANIMATIONDLGBAR_IMAGE_WIDTH,
	IMAGEANIMATIONDLGBAR_IMAGE_HEIGHT,
	IMAGEANIMATIONDLGBAR_IMAGE_WIDTH_SPACE,
	IMAGEANIMATIONDLGBAR_IMAGE_HEIGHT_SPACE,
	IMAGEANIMATIONDLGBAR_IMAGE_WIDTH_NUM,
	IMAGEANIMATIONDLGBAR_IMAGE_HEIGHT_NUM,
	IMAGEANIMATIONDLGBAR_IMAGE_TOTAL_NUM,
	IMAGEANIMATIONDLGBAR_DELAY_TIME,
	IMAGEANIMATIONDLGBAR_ANI_LOOP,
};

enum eArrayType
{
	ARRAYTYPE_WIDTH,
	ARRAYTYPE_HEIGHT,
};

enum eThirdGridImageType
{
	FIRST_IMAGE,
	SECOND_IMAGE,
	THIRD_IMAGE,
};

enum eIconPosition
{
	ICON_FRONT,
	ICON_BACK,
};

extern std::string	g_strAttribute[ASSET_END];

#endif